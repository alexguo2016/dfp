2017-12-18  23时6分20秒
AngularJS 可以构建单一页面应用程序。
AngularJS 通过新的属性和表达式扩展了HTML。
AngularJS是一个JavaScript库，框架。

AngularJS 有点类似JSP中使用Java表达式的样子。

AngularJS的主要使用场景：
把应用程序数据绑定到HTML元素
克隆和重复HTML元素
隐藏和显示HTML元素
可以在HTML元素背后添加代码
支持输入验证

AngularJS指令时以ng作为前缀的HTML属性
ng-app指令告诉AngularJS，这个元素时AngularJS应用程序的所有者
ng-model把输入与的值绑定到应用程序变量
ng-bind把应用程序变量绑定到某个段落的innerHTML

HTML5允许扩展的属性，以data-开头。
AngularJS属性以ng-开头，可以使用data-ng-来让网页对HTML5有效。

AngularJS的表达式写在双大括号内，表达式可以包含文字、运算符和变量。

AngularJS应用包括
模块（Module） var app=angular.module(‘xxx’,[]);
控制器（controller）app.controller(‘myCtrl’,function($scope){$scope.firstName=’xxx’;...});



2017-12-19

AngularJS 表达式
{{文字、运算符、变量}}
在AngularJS中，数字、字符串、对象、数组等等都与JavaScript类似，不同点在于
AngularJS表达式可以写在HTML中
不支持条件判断、循环以及异常
支持过滤器
	
AngularJS指令
这个新属性用于扩展HTML，通过内置指令来添加功能，允许自定义指令
<div ng-app[初始化一个AngularJS程序]="" ng-init[初始化应用程序数据，不常见，一般使用控制器来初始化]="firstName='John'"> 
	<p>在输入框中尝试输入：</p> 
	<p>姓名：<input type="text" ng-model[把元素值绑定到应用程序，用于同步数据]="firstName"></p>
	 <p>你输入的为： {{ firstName [变量，用于同步数据]}}</p> 
</div>

ng-repeat指令，会重复一个HTML元素，会克隆一次HTML元素
<div ng-app="" ng-init="names=['Jani','Hege','Kai']"[names属性，一个数组，也可以是对象数组，遍历出其中对象的属性]> 
	<p>使用 ng-repeat 来循环数组</p> 
	<ul>
		 <li ng-repeat="x in names"> {{ x }} </li>[遍历，类似for in]
	 </ul>
 </div>

可以通过使用.directive函数来添加自定义指令
使用驼峰法来命名一个指令，但是使用时，需要使用-分割
可以通过
元素名，<my-directive></my-directive>
属性，例如<div my-directive></div>
类名，例如<div class=”my-directive”></div> 需要在return里面特别设置 restrict:”C”
注释，例如<!-- directive:my-directive -->，需要在return里面设置restrict:”M”,replace:”true”
例子：
<body ng-app="myApp">

<runoob-directive></runoob-directive>

<script>
var app = angular.module("myApp", []);
app.directive("runoobDirective", function() {
    return {
        template : "<h1>自定义指令!</h1>"
    };
});
</script>

</body>

限制使用，可以通过添加restrict属性来设置调用的方式，例如
var app = angular.module("myApp", []);
app.directive("runoobDirective", function() {
    return {
        restrict : "A",
        template : "<h1>自定义指令!</h1>"
    };
});
	E作为元素使用
	A作为属性是使用
	C作为类名使用
	M作为注释使用



2017-12-20
	ng-model指令 将输入域的值与变量绑定，使用在HTML控制器，例如input，select，textarea的值。
	
	双向绑定的情况：在元素中直接使用变量
	
	用于验证用户输入，例如
	<form ng-app="" name="myForm">
	    Email:
	    <input type="email" name="myAddress" ng-model="text">
	    <span ng-show="myForm.myAddress.$error.email">不是一个合法的邮箱地址</span>
	</form>

	应用状态，ng-model指令可以为应用数据提供状态值(invalid，dirty，touched，error)
	



